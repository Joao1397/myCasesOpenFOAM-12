/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  12
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

xmin -200;
xmax  200;
ymin -200;
ymax  200;
zmin -100;
zmax  200;

dx 20;
dy 20;
dz 20;	        // BL OK at bottom - Better mesh at corners at the bottom
// dz 15;		// BL colapses at bottom - Mesh at the bottom corners is uglier

lx #calc "$xmax - $xmin";
ly #calc "$ymax - $ymin";
lz 	#calc "$zmax - $zmin";

xcells #calc "abs(($lx)/($dx))";
ycells #calc "abs(($ly)/($dy))";
zcells #calc "abs(($lz)/($dz))";

vertices        
(
    // BLOCK1
    ($xmin  $ymin  $zmin)	// 0
    ($xmax  $ymin  $zmin)	// 1
    ($xmax  $ymax  $zmin)	// 2
    ($xmin  $ymax  $zmin)	// 3
    ($xmin  $ymin  $zmax)	// 4
    ($xmax  $ymin  $zmax)	// 5
    ($xmax  $ymax  $zmax)	// 6
    ($xmin  $ymax  $zmax)	// 7
);

blocks          
(
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading (1 1 1)
);

edges           
(
);

/*
patches         
(
    patch minX
    (
        (0 4 7 3)
    )
    patch maxX
    (
        (2 6 5 1)
    )
    patch minY
    (
        (1 5 4 0)
    )
    patch maxY 
    (
        (3 7 6 2)
    )
    patch minZ
    (
        (0 3 2 1)
    )
    patch maxZ
    (
        (4 5 6 7)
    )
);
*/

boundary        
(
    minX
    {
        type patch;
        faces
        ( 
                (0 4 7 3)
        );
    }

    maxX
    {
        type patch;
        faces
        ( 
                (2 6 5 1)
        );
    }

    minY
    {
        type patch;
        faces
        ( 
                (1 5 4 0)
        );
    }

    maxY 
    {
        type patch;
        faces
        ( 
                (3 7 6 2)
        );
    }

    minZ
    {
        type patch;
        faces
        ( 
                (0 3 2 1)
        );
    }

    maxZ
    {
        type patch;
        faces
        ( 
                (4 5 6 7)
        );
    }

);

mergePatchPairs 
(
);

// ************************************************************************* //
